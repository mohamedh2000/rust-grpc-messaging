{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.restrictControlPlaneStatusCode = void 0;\nconst constants_1 = require(\"./constants\");\nconst INAPPROPRIATE_CONTROL_PLANE_CODES = [constants_1.Status.OK, constants_1.Status.INVALID_ARGUMENT, constants_1.Status.NOT_FOUND, constants_1.Status.ALREADY_EXISTS, constants_1.Status.FAILED_PRECONDITION, constants_1.Status.ABORTED, constants_1.Status.OUT_OF_RANGE, constants_1.Status.DATA_LOSS];\nfunction restrictControlPlaneStatusCode(code, details) {\n  if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n    return {\n      code: constants_1.Status.INTERNAL,\n      details: `Invalid status from control plane: ${code} ${constants_1.Status[code]} ${details}`\n    };\n  } else {\n    return {\n      code,\n      details\n    };\n  }\n}\nexports.restrictControlPlaneStatusCode = restrictControlPlaneStatusCode;","map":{"version":3,"names":["constants_1","require","INAPPROPRIATE_CONTROL_PLANE_CODES","Status","OK","INVALID_ARGUMENT","NOT_FOUND","ALREADY_EXISTS","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","DATA_LOSS","restrictControlPlaneStatusCode","code","details","includes","INTERNAL","exports"],"sources":["/Users/husseinmohamed/Desktop/Learn_Rust/projects/grpc-project/client-grpc-messaging/node_modules/@grpc/grpc-js/src/control-plane-status.ts"],"sourcesContent":["/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Status } from './constants';\n\nconst INAPPROPRIATE_CONTROL_PLANE_CODES: Status[] = [\n  Status.OK,\n  Status.INVALID_ARGUMENT,\n  Status.NOT_FOUND,\n  Status.ALREADY_EXISTS,\n  Status.FAILED_PRECONDITION,\n  Status.ABORTED,\n  Status.OUT_OF_RANGE,\n  Status.DATA_LOSS,\n];\n\nexport function restrictControlPlaneStatusCode(\n  code: Status,\n  details: string\n): { code: Status; details: string } {\n  if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n    return {\n      code: Status.INTERNAL,\n      details: `Invalid status from control plane: ${code} ${Status[code]} ${details}`,\n    };\n  } else {\n    return { code, details };\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,WAAA,GAAAC,OAAA;AAEA,MAAMC,iCAAiC,GAAa,CAClDF,WAAA,CAAAG,MAAM,CAACC,EAAE,EACTJ,WAAA,CAAAG,MAAM,CAACE,gBAAgB,EACvBL,WAAA,CAAAG,MAAM,CAACG,SAAS,EAChBN,WAAA,CAAAG,MAAM,CAACI,cAAc,EACrBP,WAAA,CAAAG,MAAM,CAACK,mBAAmB,EAC1BR,WAAA,CAAAG,MAAM,CAACM,OAAO,EACdT,WAAA,CAAAG,MAAM,CAACO,YAAY,EACnBV,WAAA,CAAAG,MAAM,CAACQ,SAAS,CACjB;AAED,SAAgBC,8BAA8BA,CAC5CC,IAAY,EACZC,OAAe;EAEf,IAAIZ,iCAAiC,CAACa,QAAQ,CAACF,IAAI,CAAC,EAAE;IACpD,OAAO;MACLA,IAAI,EAAEb,WAAA,CAAAG,MAAM,CAACa,QAAQ;MACrBF,OAAO,EAAE,sCAAsCD,IAAI,IAAIb,WAAA,CAAAG,MAAM,CAACU,IAAI,CAAC,IAAIC,OAAO;KAC/E;EACH,CAAC,MAAM;IACL,OAAO;MAAED,IAAI;MAAEC;IAAO,CAAE;EAC1B;AACF;AAZAG,OAAA,CAAAL,8BAAA,GAAAA,8BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}