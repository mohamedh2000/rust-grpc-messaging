{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for chat\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v5.28.2\n// source: chat.proto\n\n/* eslint-disable */\n// @ts-nocheck\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.chat = require('../client-grpc-messaging/src/proto_js/chat_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatPromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.RoomRequest,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_RequestRoom = new grpc.web.MethodDescriptor('/chat.Chat/RequestRoom', grpc.web.MethodType.UNARY, proto.chat.RoomRequest, proto.chat.Empty,\n/**\n * @param {!proto.chat.RoomRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.chat.Empty.deserializeBinary);\n\n/**\n * @param {!proto.chat.RoomRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.requestRoom = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/chat.Chat/RequestRoom', request, metadata || {}, methodDescriptor_Chat_RequestRoom, callback);\n};\n\n/**\n * @param {!proto.chat.RoomRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.requestRoom = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/chat.Chat/RequestRoom', request, metadata || {}, methodDescriptor_Chat_RequestRoom);\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.FriendRequest,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_SendFriendRequest = new grpc.web.MethodDescriptor('/chat.Chat/SendFriendRequest', grpc.web.MethodType.UNARY, proto.chat.FriendRequest, proto.chat.Empty,\n/**\n * @param {!proto.chat.FriendRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.chat.Empty.deserializeBinary);\n\n/**\n * @param {!proto.chat.FriendRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.sendFriendRequest = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/chat.Chat/SendFriendRequest', request, metadata || {}, methodDescriptor_Chat_SendFriendRequest, callback);\n};\n\n/**\n * @param {!proto.chat.FriendRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.sendFriendRequest = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/chat.Chat/SendFriendRequest', request, metadata || {}, methodDescriptor_Chat_SendFriendRequest);\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.FriendResponse,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_RespondFriendRequest = new grpc.web.MethodDescriptor('/chat.Chat/RespondFriendRequest', grpc.web.MethodType.UNARY, proto.chat.FriendResponse, proto.chat.Empty,\n/**\n * @param {!proto.chat.FriendResponse} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.chat.Empty.deserializeBinary);\n\n/**\n * @param {!proto.chat.FriendResponse} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.respondFriendRequest = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/chat.Chat/RespondFriendRequest', request, metadata || {}, methodDescriptor_Chat_RespondFriendRequest, callback);\n};\n\n/**\n * @param {!proto.chat.FriendResponse} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.respondFriendRequest = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/chat.Chat/RespondFriendRequest', request, metadata || {}, methodDescriptor_Chat_RespondFriendRequest);\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.User,\n *   !proto.chat.UserInfoResponse>}\n */\nconst methodDescriptor_Chat_UserInfo = new grpc.web.MethodDescriptor('/chat.Chat/UserInfo', grpc.web.MethodType.UNARY, proto.chat.User, proto.chat.UserInfoResponse,\n/**\n * @param {!proto.chat.User} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.chat.UserInfoResponse.deserializeBinary);\n\n/**\n * @param {!proto.chat.User} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.UserInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.UserInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.userInfo = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/chat.Chat/UserInfo', request, metadata || {}, methodDescriptor_Chat_UserInfo, callback);\n};\n\n/**\n * @param {!proto.chat.User} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.UserInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.userInfo = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/chat.Chat/UserInfo', request, metadata || {}, methodDescriptor_Chat_UserInfo);\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.UserPfpRequest,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_SetUserPfp = new grpc.web.MethodDescriptor('/chat.Chat/SetUserPfp', grpc.web.MethodType.UNARY, proto.chat.UserPfpRequest, proto.chat.Empty,\n/**\n * @param {!proto.chat.UserPfpRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.chat.Empty.deserializeBinary);\n\n/**\n * @param {!proto.chat.UserPfpRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.setUserPfp = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/chat.Chat/SetUserPfp', request, metadata || {}, methodDescriptor_Chat_SetUserPfp, callback);\n};\n\n/**\n * @param {!proto.chat.UserPfpRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.setUserPfp = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/chat.Chat/SetUserPfp', request, metadata || {}, methodDescriptor_Chat_SetUserPfp);\n};\nmodule.exports = proto.chat;","map":{"version":3,"names":["grpc","web","require","proto","chat","ChatClient","hostname","credentials","options","format","client_","GrpcWebClientBase","hostname_","replace","ChatPromiseClient","methodDescriptor_Chat_RequestRoom","MethodDescriptor","MethodType","UNARY","RoomRequest","Empty","request","serializeBinary","deserializeBinary","prototype","requestRoom","metadata","callback","rpcCall","unaryCall","methodDescriptor_Chat_SendFriendRequest","FriendRequest","sendFriendRequest","methodDescriptor_Chat_RespondFriendRequest","FriendResponse","respondFriendRequest","methodDescriptor_Chat_UserInfo","User","UserInfoResponse","userInfo","methodDescriptor_Chat_SetUserPfp","UserPfpRequest","setUserPfp","module","exports"],"sources":["/Users/husseinmohamed/Desktop/Learn_Rust/projects/grpc-project/client-grpc-messaging/src/proto_js/chat_grpc_web_pb.js"],"sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for chat\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v5.28.2\n// source: chat.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.chat = require('../client-grpc-messaging/src/proto_js/chat_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.RoomRequest,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_RequestRoom = new grpc.web.MethodDescriptor(\n  '/chat.Chat/RequestRoom',\n  grpc.web.MethodType.UNARY,\n  proto.chat.RoomRequest,\n  proto.chat.Empty,\n  /**\n   * @param {!proto.chat.RoomRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.RoomRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.requestRoom =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/RequestRoom',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_RequestRoom,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.RoomRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.requestRoom =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/RequestRoom',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_RequestRoom);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.FriendRequest,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_SendFriendRequest = new grpc.web.MethodDescriptor(\n  '/chat.Chat/SendFriendRequest',\n  grpc.web.MethodType.UNARY,\n  proto.chat.FriendRequest,\n  proto.chat.Empty,\n  /**\n   * @param {!proto.chat.FriendRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.FriendRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.sendFriendRequest =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/SendFriendRequest',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_SendFriendRequest,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.FriendRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.sendFriendRequest =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/SendFriendRequest',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_SendFriendRequest);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.FriendResponse,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_RespondFriendRequest = new grpc.web.MethodDescriptor(\n  '/chat.Chat/RespondFriendRequest',\n  grpc.web.MethodType.UNARY,\n  proto.chat.FriendResponse,\n  proto.chat.Empty,\n  /**\n   * @param {!proto.chat.FriendResponse} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.FriendResponse} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.respondFriendRequest =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/RespondFriendRequest',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_RespondFriendRequest,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.FriendResponse} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.respondFriendRequest =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/RespondFriendRequest',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_RespondFriendRequest);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.User,\n *   !proto.chat.UserInfoResponse>}\n */\nconst methodDescriptor_Chat_UserInfo = new grpc.web.MethodDescriptor(\n  '/chat.Chat/UserInfo',\n  grpc.web.MethodType.UNARY,\n  proto.chat.User,\n  proto.chat.UserInfoResponse,\n  /**\n   * @param {!proto.chat.User} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.UserInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.User} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.UserInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.UserInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.userInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/UserInfo',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_UserInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.User} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.UserInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.userInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/UserInfo',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_UserInfo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.chat.UserPfpRequest,\n *   !proto.chat.Empty>}\n */\nconst methodDescriptor_Chat_SetUserPfp = new grpc.web.MethodDescriptor(\n  '/chat.Chat/SetUserPfp',\n  grpc.web.MethodType.UNARY,\n  proto.chat.UserPfpRequest,\n  proto.chat.Empty,\n  /**\n   * @param {!proto.chat.UserPfpRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.UserPfpRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.chat.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.setUserPfp =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/SetUserPfp',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_SetUserPfp,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.UserPfpRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.Empty>}\n *     Promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.setUserPfp =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/SetUserPfp',\n      request,\n      metadata || {},\n      methodDescriptor_Chat_SetUserPfp);\n};\n\n\nmodule.exports = proto.chat;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}