{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDateDifference = exports.deadlineToString = exports.getRelativeTimeout = exports.getDeadlineTimeoutString = exports.minDeadline = void 0;\nfunction minDeadline(...deadlineList) {\n  let minValue = Infinity;\n  for (const deadline of deadlineList) {\n    const deadlineMsecs = deadline instanceof Date ? deadline.getTime() : deadline;\n    if (deadlineMsecs < minValue) {\n      minValue = deadlineMsecs;\n    }\n  }\n  return minValue;\n}\nexports.minDeadline = minDeadline;\nconst units = [['m', 1], ['S', 1000], ['M', 60 * 1000], ['H', 60 * 60 * 1000]];\nfunction getDeadlineTimeoutString(deadline) {\n  const now = new Date().getTime();\n  if (deadline instanceof Date) {\n    deadline = deadline.getTime();\n  }\n  const timeoutMs = Math.max(deadline - now, 0);\n  for (const [unit, factor] of units) {\n    const amount = timeoutMs / factor;\n    if (amount < 1e8) {\n      return String(Math.ceil(amount)) + unit;\n    }\n  }\n  throw new Error('Deadline is too far in the future');\n}\nexports.getDeadlineTimeoutString = getDeadlineTimeoutString;\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nfunction getRelativeTimeout(deadline) {\n  const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n  const now = new Date().getTime();\n  const timeout = deadlineMs - now;\n  if (timeout < 0) {\n    return 0;\n  } else if (timeout > MAX_TIMEOUT_TIME) {\n    return Infinity;\n  } else {\n    return timeout;\n  }\n}\nexports.getRelativeTimeout = getRelativeTimeout;\nfunction deadlineToString(deadline) {\n  if (deadline instanceof Date) {\n    return deadline.toISOString();\n  } else {\n    const dateDeadline = new Date(deadline);\n    if (Number.isNaN(dateDeadline.getTime())) {\n      return '' + deadline;\n    } else {\n      return dateDeadline.toISOString();\n    }\n  }\n}\nexports.deadlineToString = deadlineToString;\n/**\n * Calculate the difference between two dates as a number of seconds and format\n * it as a string.\n * @param startDate\n * @param endDate\n * @returns\n */\nfunction formatDateDifference(startDate, endDate) {\n  return ((endDate.getTime() - startDate.getTime()) / 1000).toFixed(3) + 's';\n}\nexports.formatDateDifference = formatDateDifference;","map":{"version":3,"names":["minDeadline","deadlineList","minValue","Infinity","deadline","deadlineMsecs","Date","getTime","exports","units","getDeadlineTimeoutString","now","timeoutMs","Math","max","unit","factor","amount","String","ceil","Error","MAX_TIMEOUT_TIME","getRelativeTimeout","deadlineMs","timeout","deadlineToString","toISOString","dateDeadline","Number","isNaN","formatDateDifference","startDate","endDate","toFixed"],"sources":["/Users/husseinmohamed/Desktop/Learn_Rust/projects/grpc-project/client-grpc-messaging/node_modules/@grpc/grpc-js/src/deadline.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport type Deadline = Date | number;\n\nexport function minDeadline(...deadlineList: Deadline[]): Deadline {\n  let minValue = Infinity;\n  for (const deadline of deadlineList) {\n    const deadlineMsecs =\n      deadline instanceof Date ? deadline.getTime() : deadline;\n    if (deadlineMsecs < minValue) {\n      minValue = deadlineMsecs;\n    }\n  }\n  return minValue;\n}\n\nconst units: Array<[string, number]> = [\n  ['m', 1],\n  ['S', 1000],\n  ['M', 60 * 1000],\n  ['H', 60 * 60 * 1000],\n];\n\nexport function getDeadlineTimeoutString(deadline: Deadline) {\n  const now = new Date().getTime();\n  if (deadline instanceof Date) {\n    deadline = deadline.getTime();\n  }\n  const timeoutMs = Math.max(deadline - now, 0);\n  for (const [unit, factor] of units) {\n    const amount = timeoutMs / factor;\n    if (amount < 1e8) {\n      return String(Math.ceil(amount)) + unit;\n    }\n  }\n  throw new Error('Deadline is too far in the future');\n}\n\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nexport function getRelativeTimeout(deadline: Deadline) {\n  const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n  const now = new Date().getTime();\n  const timeout = deadlineMs - now;\n  if (timeout < 0) {\n    return 0;\n  } else if (timeout > MAX_TIMEOUT_TIME) {\n    return Infinity;\n  } else {\n    return timeout;\n  }\n}\n\nexport function deadlineToString(deadline: Deadline): string {\n  if (deadline instanceof Date) {\n    return deadline.toISOString();\n  } else {\n    const dateDeadline = new Date(deadline);\n    if (Number.isNaN(dateDeadline.getTime())) {\n      return '' + deadline;\n    } else {\n      return dateDeadline.toISOString();\n    }\n  }\n}\n\n/**\n * Calculate the difference between two dates as a number of seconds and format\n * it as a string.\n * @param startDate\n * @param endDate\n * @returns\n */\nexport function formatDateDifference(startDate: Date, endDate: Date): string {\n  return ((endDate.getTime() - startDate.getTime()) / 1000).toFixed(3) + 's';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}