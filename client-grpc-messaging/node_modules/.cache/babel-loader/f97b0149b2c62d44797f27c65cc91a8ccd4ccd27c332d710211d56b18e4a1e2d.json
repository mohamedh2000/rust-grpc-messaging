{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createServerCredentialsWithInterceptors = exports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n  constructor() {\n    this.watchers = new Set();\n    this.latestContextOptions = null;\n  }\n  _addWatcher(watcher) {\n    this.watchers.add(watcher);\n  }\n  _removeWatcher(watcher) {\n    this.watchers.delete(watcher);\n  }\n  updateSecureContextOptions(options) {\n    if (options) {\n      this.latestContextOptions = options;\n    } else {\n      this.latestContextOptions = null;\n    }\n    for (const watcher of this.watchers) {\n      watcher(this.latestContextOptions);\n    }\n  }\n  _getSettings() {\n    return this.latestContextOptions;\n  }\n  _getInterceptors() {\n    return [];\n  }\n  static createInsecure() {\n    return new InsecureServerCredentials();\n  }\n  static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n    var _a;\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n    const cert = [];\n    const key = [];\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n    return new SecureServerCredentials({\n      ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: tls_helpers_1.CIPHER_SUITES\n    });\n  }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure() {\n    return false;\n  }\n  _getSettings() {\n    return null;\n  }\n  _equals(other) {\n    return other instanceof InsecureServerCredentials;\n  }\n}\nclass SecureServerCredentials extends ServerCredentials {\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n  _isSecure() {\n    return true;\n  }\n  _getSettings() {\n    return this.options;\n  }\n  /**\n   * Checks equality by checking the options that are actually set by\n   * createSsl.\n   * @param other\n   * @returns\n   */\n  _equals(other) {\n    if (this === other) {\n      return true;\n    }\n    if (!(other instanceof SecureServerCredentials)) {\n      return false;\n    }\n    // options.ca equality check\n    if (Buffer.isBuffer(this.options.ca) && Buffer.isBuffer(other.options.ca)) {\n      if (!this.options.ca.equals(other.options.ca)) {\n        return false;\n      }\n    } else {\n      if (this.options.ca !== other.options.ca) {\n        return false;\n      }\n    }\n    // options.cert equality check\n    if (Array.isArray(this.options.cert) && Array.isArray(other.options.cert)) {\n      if (this.options.cert.length !== other.options.cert.length) {\n        return false;\n      }\n      for (let i = 0; i < this.options.cert.length; i++) {\n        const thisCert = this.options.cert[i];\n        const otherCert = other.options.cert[i];\n        if (Buffer.isBuffer(thisCert) && Buffer.isBuffer(otherCert)) {\n          if (!thisCert.equals(otherCert)) {\n            return false;\n          }\n        } else {\n          if (thisCert !== otherCert) {\n            return false;\n          }\n        }\n      }\n    } else {\n      if (this.options.cert !== other.options.cert) {\n        return false;\n      }\n    }\n    // options.key equality check\n    if (Array.isArray(this.options.key) && Array.isArray(other.options.key)) {\n      if (this.options.key.length !== other.options.key.length) {\n        return false;\n      }\n      for (let i = 0; i < this.options.key.length; i++) {\n        const thisKey = this.options.key[i];\n        const otherKey = other.options.key[i];\n        if (Buffer.isBuffer(thisKey) && Buffer.isBuffer(otherKey)) {\n          if (!thisKey.equals(otherKey)) {\n            return false;\n          }\n        } else {\n          if (thisKey !== otherKey) {\n            return false;\n          }\n        }\n      }\n    } else {\n      if (this.options.key !== other.options.key) {\n        return false;\n      }\n    }\n    // options.requestCert equality check\n    if (this.options.requestCert !== other.options.requestCert) {\n      return false;\n    }\n    /* ciphers is derived from a value that is constant for the process, so no\n     * equality check is needed. */\n    return true;\n  }\n}\nclass InterceptorServerCredentials extends ServerCredentials {\n  constructor(childCredentials, interceptors) {\n    super();\n    this.childCredentials = childCredentials;\n    this.interceptors = interceptors;\n  }\n  _isSecure() {\n    return this.childCredentials._isSecure();\n  }\n  _equals(other) {\n    if (!(other instanceof InterceptorServerCredentials)) {\n      return false;\n    }\n    if (!this.childCredentials._equals(other.childCredentials)) {\n      return false;\n    }\n    if (this.interceptors.length !== other.interceptors.length) {\n      return false;\n    }\n    for (let i = 0; i < this.interceptors.length; i++) {\n      if (this.interceptors[i] !== other.interceptors[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  _getInterceptors() {\n    return this.interceptors;\n  }\n  _addWatcher(watcher) {\n    this.childCredentials._addWatcher(watcher);\n  }\n  _removeWatcher(watcher) {\n    this.childCredentials._removeWatcher(watcher);\n  }\n}\nfunction createServerCredentialsWithInterceptors(credentials, interceptors) {\n  return new InterceptorServerCredentials(credentials, interceptors);\n}\nexports.createServerCredentialsWithInterceptors = createServerCredentialsWithInterceptors;","map":{"version":3,"names":["tls_helpers_1","require","ServerCredentials","constructor","watchers","Set","latestContextOptions","_addWatcher","watcher","add","_removeWatcher","delete","updateSecureContextOptions","options","_getSettings","_getInterceptors","createInsecure","InsecureServerCredentials","createSsl","rootCerts","keyCertPairs","checkClientCertificate","Buffer","isBuffer","TypeError","Array","isArray","cert","key","i","length","pair","private_key","cert_chain","push","SecureServerCredentials","ca","_a","getDefaultRootsData","undefined","requestCert","ciphers","CIPHER_SUITES","exports","_isSecure","_equals","other","equals","thisCert","otherCert","thisKey","otherKey","InterceptorServerCredentials","childCredentials","interceptors","createServerCredentialsWithInterceptors","credentials"],"sources":["/Users/husseinmohamed/Desktop/Learn_Rust/projects/grpc-project/client-grpc-messaging/node_modules/@grpc/grpc-js/src/server-credentials.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { SecureServerOptions } from 'http2';\nimport { CIPHER_SUITES, getDefaultRootsData } from './tls-helpers';\nimport { SecureContextOptions } from 'tls';\nimport { ServerInterceptor } from '.';\n\nexport interface KeyCertPair {\n  private_key: Buffer;\n  cert_chain: Buffer;\n}\n\nexport interface SecureContextWatcher {\n  (context: SecureContextOptions | null): void;\n}\n\nexport abstract class ServerCredentials {\n  private watchers: Set<SecureContextWatcher> = new Set();\n  private latestContextOptions: SecureServerOptions | null = null;\n  _addWatcher(watcher: SecureContextWatcher) {\n    this.watchers.add(watcher);\n  }\n  _removeWatcher(watcher: SecureContextWatcher) {\n    this.watchers.delete(watcher);\n  }\n  protected updateSecureContextOptions(options: SecureServerOptions | null) {\n    if (options) {\n      this.latestContextOptions = options;\n    } else {\n      this.latestContextOptions = null;\n    }\n    for (const watcher of this.watchers) {\n      watcher(this.latestContextOptions);\n    }\n  }\n  abstract _isSecure(): boolean;\n  _getSettings(): SecureServerOptions | null {\n    return this.latestContextOptions;\n  }\n  _getInterceptors(): ServerInterceptor[] {\n    return [];\n  }\n  abstract _equals(other: ServerCredentials): boolean;\n\n  static createInsecure(): ServerCredentials {\n    return new InsecureServerCredentials();\n  }\n\n  static createSsl(\n    rootCerts: Buffer | null,\n    keyCertPairs: KeyCertPair[],\n    checkClientCertificate = false\n  ): ServerCredentials {\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n\n    const cert: Buffer[] = [];\n    const key: Buffer[] = [];\n\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n\n    return new SecureServerCredentials({\n      ca: rootCerts ?? getDefaultRootsData() ?? undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: CIPHER_SUITES,\n    });\n  }\n}\n\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure(): boolean {\n    return false;\n  }\n\n  _getSettings(): null {\n    return null;\n  }\n\n  _equals(other: ServerCredentials): boolean {\n    return other instanceof InsecureServerCredentials;\n  }\n}\n\nclass SecureServerCredentials extends ServerCredentials {\n  private options: SecureServerOptions;\n\n  constructor(options: SecureServerOptions) {\n    super();\n    this.options = options;\n  }\n\n  _isSecure(): boolean {\n    return true;\n  }\n\n  _getSettings(): SecureServerOptions {\n    return this.options;\n  }\n\n  /**\n   * Checks equality by checking the options that are actually set by\n   * createSsl.\n   * @param other\n   * @returns\n   */\n  _equals(other: ServerCredentials): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!(other instanceof SecureServerCredentials)) {\n      return false;\n    }\n    // options.ca equality check\n    if (Buffer.isBuffer(this.options.ca) && Buffer.isBuffer(other.options.ca)) {\n      if (!this.options.ca.equals(other.options.ca)) {\n        return false;\n      }\n    } else {\n      if (this.options.ca !== other.options.ca) {\n        return false;\n      }\n    }\n    // options.cert equality check\n    if (Array.isArray(this.options.cert) && Array.isArray(other.options.cert)) {\n      if (this.options.cert.length !== other.options.cert.length) {\n        return false;\n      }\n      for (let i = 0; i < this.options.cert.length; i++) {\n        const thisCert = this.options.cert[i];\n        const otherCert = other.options.cert[i];\n        if (Buffer.isBuffer(thisCert) && Buffer.isBuffer(otherCert)) {\n          if (!thisCert.equals(otherCert)) {\n            return false;\n          }\n        } else {\n          if (thisCert !== otherCert) {\n            return false;\n          }\n        }\n      }\n    } else {\n      if (this.options.cert !== other.options.cert) {\n        return false;\n      }\n    }\n    // options.key equality check\n    if (Array.isArray(this.options.key) && Array.isArray(other.options.key)) {\n      if (this.options.key.length !== other.options.key.length) {\n        return false;\n      }\n      for (let i = 0; i < this.options.key.length; i++) {\n        const thisKey = this.options.key[i];\n        const otherKey = other.options.key[i];\n        if (Buffer.isBuffer(thisKey) && Buffer.isBuffer(otherKey)) {\n          if (!thisKey.equals(otherKey)) {\n            return false;\n          }\n        } else {\n          if (thisKey !== otherKey) {\n            return false;\n          }\n        }\n      }\n    } else {\n      if (this.options.key !== other.options.key) {\n        return false;\n      }\n    }\n    // options.requestCert equality check\n    if (this.options.requestCert !== other.options.requestCert) {\n      return false;\n    }\n    /* ciphers is derived from a value that is constant for the process, so no\n     * equality check is needed. */\n    return true;\n  }\n}\n\nclass InterceptorServerCredentials extends ServerCredentials {\n  constructor(private readonly childCredentials: ServerCredentials, private readonly interceptors: ServerInterceptor[]) {\n    super();\n  }\n  _isSecure(): boolean {\n    return this.childCredentials._isSecure();\n  }\n  _equals(other: ServerCredentials): boolean {\n    if (!(other instanceof InterceptorServerCredentials)) {\n      return false;\n    }\n    if (!(this.childCredentials._equals(other.childCredentials))) {\n      return false;\n    }\n    if (this.interceptors.length !== other.interceptors.length) {\n      return false;\n    }\n    for (let i = 0; i < this.interceptors.length; i++) {\n      if (this.interceptors[i] !== other.interceptors[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  override _getInterceptors(): ServerInterceptor[] {\n    return this.interceptors;\n  }\n  override _addWatcher(watcher: SecureContextWatcher): void {\n    this.childCredentials._addWatcher(watcher);\n  }\n  override _removeWatcher(watcher: SecureContextWatcher): void {\n    this.childCredentials._removeWatcher(watcher);\n  }\n}\n\nexport function createServerCredentialsWithInterceptors(credentials: ServerCredentials, interceptors: ServerInterceptor[]): ServerCredentials {\n  return new InterceptorServerCredentials(credentials, interceptors);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}