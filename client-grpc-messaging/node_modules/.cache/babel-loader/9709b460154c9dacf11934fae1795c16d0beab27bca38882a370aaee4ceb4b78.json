{"ast":null,"code":"// source: chat.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = typeof globalThis !== 'undefined' && globalThis || typeof window !== 'undefined' && window || typeof global !== 'undefined' && global || typeof self !== 'undefined' && self || function () {\n  return this;\n}.call(null) || Function('return this')();\ngoog.exportSymbol('proto.chat.ChatMessage', null, global);\ngoog.exportSymbol('proto.chat.Empty', null, global);\ngoog.exportSymbol('proto.chat.EnterRoom', null, global);\ngoog.exportSymbol('proto.chat.Friend', null, global);\ngoog.exportSymbol('proto.chat.FriendRequest', null, global);\ngoog.exportSymbol('proto.chat.FriendResponse', null, global);\ngoog.exportSymbol('proto.chat.Room', null, global);\ngoog.exportSymbol('proto.chat.RoomRequest', null, global);\ngoog.exportSymbol('proto.chat.User', null, global);\ngoog.exportSymbol('proto.chat.UserInfoResponse', null, global);\ngoog.exportSymbol('proto.chat.UserListResponse', null, global);\ngoog.exportSymbol('proto.chat.UserPfpRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.FriendResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.FriendResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.FriendResponse.displayName = 'proto.chat.FriendResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.Empty = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.Empty.displayName = 'proto.chat.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.UserPfpRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.UserPfpRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.UserPfpRequest.displayName = 'proto.chat.UserPfpRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.EnterRoom = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.EnterRoom, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.EnterRoom.displayName = 'proto.chat.EnterRoom';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.FriendRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.FriendRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.FriendRequest.displayName = 'proto.chat.FriendRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.User.displayName = 'proto.chat.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.Friend = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.Friend, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.Friend.displayName = 'proto.chat.Friend';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.Room = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.Room, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.Room.displayName = 'proto.chat.Room';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.UserInfoResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.UserInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.UserInfoResponse.displayName = 'proto.chat.UserInfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.UserListResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.chat.UserListResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.chat.UserListResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.UserListResponse.displayName = 'proto.chat.UserListResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.RoomRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.RoomRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.RoomRequest.displayName = 'proto.chat.RoomRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.ChatMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.ChatMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.ChatMessage.displayName = 'proto.chat.ChatMessage';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.FriendResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.FriendResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.FriendResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.FriendResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        senderuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        receiveruserid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        acceptfq: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.FriendResponse}\n */\nproto.chat.FriendResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.FriendResponse();\n  return proto.chat.FriendResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.FriendResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.FriendResponse}\n */\nproto.chat.FriendResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setSenderuserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setReceiveruserid(value);\n        break;\n      case 3:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setAcceptfq(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.FriendResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.FriendResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.FriendResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.FriendResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSenderuserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getReceiveruserid();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getAcceptfq();\n  if (f) {\n    writer.writeBool(3, f);\n  }\n};\n\n/**\n * optional string senderUserId = 1;\n * @return {string}\n */\nproto.chat.FriendResponse.prototype.getSenderuserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendResponse} returns this\n */\nproto.chat.FriendResponse.prototype.setSenderuserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string receiverUserId = 2;\n * @return {string}\n */\nproto.chat.FriendResponse.prototype.getReceiveruserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendResponse} returns this\n */\nproto.chat.FriendResponse.prototype.setReceiveruserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional bool acceptFQ = 3;\n * @return {boolean}\n */\nproto.chat.FriendResponse.prototype.getAcceptfq = function () {\n  return /** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 3, false);\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.chat.FriendResponse} returns this\n */\nproto.chat.FriendResponse.prototype.setAcceptfq = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.Empty.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.Empty.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.Empty} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.Empty.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {};\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.Empty}\n */\nproto.chat.Empty.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.Empty();\n  return proto.chat.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.Empty}\n */\nproto.chat.Empty.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.Empty.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Empty.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.UserPfpRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.UserPfpRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.UserPfpRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.UserPfpRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        pfppic: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.UserPfpRequest}\n */\nproto.chat.UserPfpRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.UserPfpRequest();\n  return proto.chat.UserPfpRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.UserPfpRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.UserPfpRequest}\n */\nproto.chat.UserPfpRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setPfppic(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.UserPfpRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.UserPfpRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.UserPfpRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserPfpRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getPfppic();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.UserPfpRequest.prototype.getUserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserPfpRequest} returns this\n */\nproto.chat.UserPfpRequest.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string pfpPic = 2;\n * @return {string}\n */\nproto.chat.UserPfpRequest.prototype.getPfppic = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserPfpRequest} returns this\n */\nproto.chat.UserPfpRequest.prototype.setPfppic = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.EnterRoom.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.EnterRoom.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.EnterRoom} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.EnterRoom.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        username: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.EnterRoom}\n */\nproto.chat.EnterRoom.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.EnterRoom();\n  return proto.chat.EnterRoom.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.EnterRoom} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.EnterRoom}\n */\nproto.chat.EnterRoom.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setRoomid(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setUsername(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.EnterRoom.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.EnterRoom.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.EnterRoom} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.EnterRoom.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getRoomid();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.EnterRoom.prototype.getUserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.EnterRoom} returns this\n */\nproto.chat.EnterRoom.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string roomId = 2;\n * @return {string}\n */\nproto.chat.EnterRoom.prototype.getRoomid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.EnterRoom} returns this\n */\nproto.chat.EnterRoom.prototype.setRoomid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.chat.EnterRoom.prototype.getUsername = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.EnterRoom} returns this\n */\nproto.chat.EnterRoom.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.FriendRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.FriendRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.FriendRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.FriendRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        senderuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        receiveruserid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        message: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        date: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.FriendRequest}\n */\nproto.chat.FriendRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.FriendRequest();\n  return proto.chat.FriendRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.FriendRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.FriendRequest}\n */\nproto.chat.FriendRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setSenderuserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setReceiveruserid(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setMessage(value);\n        break;\n      case 4:\n        var value = /** @type {string} */reader.readString();\n        msg.setDate(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.FriendRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.FriendRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.FriendRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.FriendRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSenderuserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getReceiveruserid();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getDate();\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n\n/**\n * optional string senderUserId = 1;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getSenderuserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setSenderuserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string receiverUserId = 2;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getReceiveruserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setReceiveruserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string message = 3;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getMessage = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional string date = 4;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getDate = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setDate = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.User.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.User.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.User}\n */\nproto.chat.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.User();\n  return proto.chat.User.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.User}\n */\nproto.chat.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.User.prototype.getUserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.User} returns this\n */\nproto.chat.User.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.Friend.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.Friend.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.Friend} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.Friend.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        username: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        userpfp: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.Friend}\n */\nproto.chat.Friend.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.Friend();\n  return proto.chat.Friend.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.Friend} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.Friend}\n */\nproto.chat.Friend.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setUsername(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserpfp(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.Friend.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.Friend.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.Friend} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Friend.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getUserpfp();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.Friend.prototype.getUserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.Friend} returns this\n */\nproto.chat.Friend.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string userName = 2;\n * @return {string}\n */\nproto.chat.Friend.prototype.getUsername = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.Friend} returns this\n */\nproto.chat.Friend.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string userPfp = 3;\n * @return {string}\n */\nproto.chat.Friend.prototype.getUserpfp = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.Friend} returns this\n */\nproto.chat.Friend.prototype.setUserpfp = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.Room.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.Room.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.Room} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.Room.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        roomid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n        roomname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        roompfp: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.Room}\n */\nproto.chat.Room.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.Room();\n  return proto.chat.Room.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.Room} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.Room}\n */\nproto.chat.Room.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {number} */reader.readUint64();\n        msg.setRoomid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setRoomname(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setRoompfp(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.Room.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.Room.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.Room} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Room.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRoomid();\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n  f = message.getRoomname();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getRoompfp();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n\n/**\n * optional uint64 roomId = 1;\n * @return {number}\n */\nproto.chat.Room.prototype.getRoomid = function () {\n  return /** @type {number} */jspb.Message.getFieldWithDefault(this, 1, 0);\n};\n\n/**\n * @param {number} value\n * @return {!proto.chat.Room} returns this\n */\nproto.chat.Room.prototype.setRoomid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n/**\n * optional string roomName = 2;\n * @return {string}\n */\nproto.chat.Room.prototype.getRoomname = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.Room} returns this\n */\nproto.chat.Room.prototype.setRoomname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string roomPfp = 3;\n * @return {string}\n */\nproto.chat.Room.prototype.getRoompfp = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.Room} returns this\n */\nproto.chat.Room.prototype.setRoompfp = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.UserInfoResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.UserInfoResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.UserInfoResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.UserInfoResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        userpfp: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        userdata: (f = msg.getUserdata()) && proto.chat.UserListResponse.toObject(includeInstance, f)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.UserInfoResponse}\n */\nproto.chat.UserInfoResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.UserInfoResponse();\n  return proto.chat.UserInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.UserInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.UserInfoResponse}\n */\nproto.chat.UserInfoResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUsername(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserpfp(value);\n        break;\n      case 3:\n        var value = new proto.chat.UserListResponse();\n        reader.readMessage(value, proto.chat.UserListResponse.deserializeBinaryFromReader);\n        msg.setUserdata(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.UserInfoResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.UserInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.UserInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserInfoResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getUserpfp();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getUserdata();\n  if (f != null) {\n    writer.writeMessage(3, f, proto.chat.UserListResponse.serializeBinaryToWriter);\n  }\n};\n\n/**\n * optional string userName = 1;\n * @return {string}\n */\nproto.chat.UserInfoResponse.prototype.getUsername = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserInfoResponse} returns this\n */\nproto.chat.UserInfoResponse.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string userPfp = 2;\n * @return {string}\n */\nproto.chat.UserInfoResponse.prototype.getUserpfp = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserInfoResponse} returns this\n */\nproto.chat.UserInfoResponse.prototype.setUserpfp = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional UserListResponse userData = 3;\n * @return {?proto.chat.UserListResponse}\n */\nproto.chat.UserInfoResponse.prototype.getUserdata = function () {\n  return /** @type{?proto.chat.UserListResponse} */(\n    jspb.Message.getWrapperField(this, proto.chat.UserListResponse, 3)\n  );\n};\n\n/**\n * @param {?proto.chat.UserListResponse|undefined} value\n * @return {!proto.chat.UserInfoResponse} returns this\n*/\nproto.chat.UserInfoResponse.prototype.setUserdata = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.chat.UserInfoResponse} returns this\n */\nproto.chat.UserInfoResponse.prototype.clearUserdata = function () {\n  return this.setUserdata(undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.chat.UserInfoResponse.prototype.hasUserdata = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.chat.UserListResponse.repeatedFields_ = [1, 2];\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.UserListResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.UserListResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.UserListResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.UserListResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        friendsList: jspb.Message.toObjectList(msg.getFriendsList(), proto.chat.Friend.toObject, includeInstance),\n        roomsList: jspb.Message.toObjectList(msg.getRoomsList(), proto.chat.Room.toObject, includeInstance)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.UserListResponse}\n */\nproto.chat.UserListResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.UserListResponse();\n  return proto.chat.UserListResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.UserListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.UserListResponse}\n */\nproto.chat.UserListResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.chat.Friend();\n        reader.readMessage(value, proto.chat.Friend.deserializeBinaryFromReader);\n        msg.addFriends(value);\n        break;\n      case 2:\n        var value = new proto.chat.Room();\n        reader.readMessage(value, proto.chat.Room.deserializeBinaryFromReader);\n        msg.addRooms(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.UserListResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.UserListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.UserListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserListResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFriendsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.chat.Friend.serializeBinaryToWriter);\n  }\n  f = message.getRoomsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.chat.Room.serializeBinaryToWriter);\n  }\n};\n\n/**\n * repeated Friend friends = 1;\n * @return {!Array<!proto.chat.Friend>}\n */\nproto.chat.UserListResponse.prototype.getFriendsList = function () {\n  return /** @type{!Array<!proto.chat.Friend>} */(\n    jspb.Message.getRepeatedWrapperField(this, proto.chat.Friend, 1)\n  );\n};\n\n/**\n * @param {!Array<!proto.chat.Friend>} value\n * @return {!proto.chat.UserListResponse} returns this\n*/\nproto.chat.UserListResponse.prototype.setFriendsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n/**\n * @param {!proto.chat.Friend=} opt_value\n * @param {number=} opt_index\n * @return {!proto.chat.Friend}\n */\nproto.chat.UserListResponse.prototype.addFriends = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chat.Friend, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.chat.UserListResponse} returns this\n */\nproto.chat.UserListResponse.prototype.clearFriendsList = function () {\n  return this.setFriendsList([]);\n};\n\n/**\n * repeated Room rooms = 2;\n * @return {!Array<!proto.chat.Room>}\n */\nproto.chat.UserListResponse.prototype.getRoomsList = function () {\n  return /** @type{!Array<!proto.chat.Room>} */(\n    jspb.Message.getRepeatedWrapperField(this, proto.chat.Room, 2)\n  );\n};\n\n/**\n * @param {!Array<!proto.chat.Room>} value\n * @return {!proto.chat.UserListResponse} returns this\n*/\nproto.chat.UserListResponse.prototype.setRoomsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n/**\n * @param {!proto.chat.Room=} opt_value\n * @param {number=} opt_index\n * @return {!proto.chat.Room}\n */\nproto.chat.UserListResponse.prototype.addRooms = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.chat.Room, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.chat.UserListResponse} returns this\n */\nproto.chat.UserListResponse.prototype.clearRoomsList = function () {\n  return this.setRoomsList([]);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.RoomRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.RoomRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.RoomRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.RoomRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        username: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        message: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.RoomRequest}\n */\nproto.chat.RoomRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.RoomRequest();\n  return proto.chat.RoomRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.RoomRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.RoomRequest}\n */\nproto.chat.RoomRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setRoomid(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setUsername(value);\n        break;\n      case 4:\n        var value = /** @type {string} */reader.readString();\n        msg.setMessage(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.RoomRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.RoomRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.RoomRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.RoomRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getRoomid();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getUserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string roomId = 2;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getRoomid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setRoomid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getUsername = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional string message = 4;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getMessage = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.chat.ChatMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.chat.ChatMessage.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.chat.ChatMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.chat.ChatMessage.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        username: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n        message: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n        url: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.ChatMessage}\n */\nproto.chat.ChatMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.ChatMessage();\n  return proto.chat.ChatMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.ChatMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.ChatMessage}\n */\nproto.chat.ChatMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setRoomid(value);\n        break;\n      case 3:\n        var value = /** @type {string} */reader.readString();\n        msg.setUsername(value);\n        break;\n      case 4:\n        var value = /** @type {string} */reader.readString();\n        msg.setMessage(value);\n        break;\n      case 5:\n        var value = /** @type {string} */reader.readString();\n        msg.setUrl(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.ChatMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.ChatMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.ChatMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.ChatMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getRoomid();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n  f = /** @type {string} */jspb.Message.getField(message, 5);\n  if (f != null) {\n    writer.writeString(5, f);\n  }\n};\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getUserid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string roomId = 2;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getRoomid = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setRoomid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getUsername = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 3, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n/**\n * optional string message = 4;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getMessage = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 4, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n/**\n * optional string url = 5;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getUrl = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 5, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setUrl = function (value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.clearUrl = function () {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.chat.ChatMessage.prototype.hasUrl = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\ngoog.object.extend(exports, proto.chat);","map":{"version":3,"names":["jspb","require","goog","global","globalThis","window","self","call","Function","exportSymbol","proto","chat","FriendResponse","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Empty","UserPfpRequest","EnterRoom","FriendRequest","User","Friend","Room","UserInfoResponse","UserListResponse","repeatedFields_","RoomRequest","ChatMessage","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","senderuserid","getFieldWithDefault","receiveruserid","acceptfq","getBooleanFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setSenderuserid","setReceiveruserid","readBool","setAcceptfq","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getSenderuserid","length","writeString","getReceiveruserid","getAcceptfq","writeBool","setProto3StringField","setProto3BooleanField","userid","pfppic","setUserid","setPfppic","getUserid","getPfppic","roomid","username","setRoomid","setUsername","getRoomid","getUsername","date","setMessage","setDate","getMessage","getDate","userpfp","setUserpfp","getUserpfp","roomname","roompfp","readUint64","setRoomname","setRoompfp","writeUint64","getRoomname","getRoompfp","setProto3IntField","userdata","getUserdata","readMessage","setUserdata","writeMessage","getWrapperField","setWrapperField","clearUserdata","hasUserdata","getField","friendsList","toObjectList","getFriendsList","roomsList","getRoomsList","addFriends","addRooms","writeRepeatedMessage","getRepeatedWrapperField","setFriendsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearFriendsList","setRoomsList","clearRoomsList","url","setUrl","getUrl","setField","clearUrl","hasUrl","object","extend","exports"],"sources":["/Users/husseinmohamed/Desktop/Learn_Rust/projects/grpc-project/client-grpc-messaging/src/proto_js/chat_pb.js"],"sourcesContent":["// source: chat.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof window !== 'undefined' && window) ||\n    (typeof global !== 'undefined' && global) ||\n    (typeof self !== 'undefined' && self) ||\n    (function () { return this; }).call(null) ||\n    Function('return this')();\n\ngoog.exportSymbol('proto.chat.ChatMessage', null, global);\ngoog.exportSymbol('proto.chat.Empty', null, global);\ngoog.exportSymbol('proto.chat.EnterRoom', null, global);\ngoog.exportSymbol('proto.chat.Friend', null, global);\ngoog.exportSymbol('proto.chat.FriendRequest', null, global);\ngoog.exportSymbol('proto.chat.FriendResponse', null, global);\ngoog.exportSymbol('proto.chat.Room', null, global);\ngoog.exportSymbol('proto.chat.RoomRequest', null, global);\ngoog.exportSymbol('proto.chat.User', null, global);\ngoog.exportSymbol('proto.chat.UserInfoResponse', null, global);\ngoog.exportSymbol('proto.chat.UserListResponse', null, global);\ngoog.exportSymbol('proto.chat.UserPfpRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.FriendResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.FriendResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.FriendResponse.displayName = 'proto.chat.FriendResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.Empty.displayName = 'proto.chat.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.UserPfpRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.UserPfpRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.UserPfpRequest.displayName = 'proto.chat.UserPfpRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.EnterRoom = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.EnterRoom, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.EnterRoom.displayName = 'proto.chat.EnterRoom';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.FriendRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.FriendRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.FriendRequest.displayName = 'proto.chat.FriendRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.User.displayName = 'proto.chat.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.Friend = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.Friend, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.Friend.displayName = 'proto.chat.Friend';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.Room = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.Room, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.Room.displayName = 'proto.chat.Room';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.UserInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.UserInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.UserInfoResponse.displayName = 'proto.chat.UserInfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.UserListResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.chat.UserListResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.chat.UserListResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.UserListResponse.displayName = 'proto.chat.UserListResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.RoomRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.RoomRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.RoomRequest.displayName = 'proto.chat.RoomRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.ChatMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.ChatMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.chat.ChatMessage.displayName = 'proto.chat.ChatMessage';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.FriendResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.FriendResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.FriendResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.FriendResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\nsenderuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nreceiveruserid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nacceptfq: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.FriendResponse}\n */\nproto.chat.FriendResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.FriendResponse;\n  return proto.chat.FriendResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.FriendResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.FriendResponse}\n */\nproto.chat.FriendResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSenderuserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReceiveruserid(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAcceptfq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.FriendResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.FriendResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.FriendResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.FriendResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSenderuserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getReceiveruserid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAcceptfq();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string senderUserId = 1;\n * @return {string}\n */\nproto.chat.FriendResponse.prototype.getSenderuserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendResponse} returns this\n */\nproto.chat.FriendResponse.prototype.setSenderuserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string receiverUserId = 2;\n * @return {string}\n */\nproto.chat.FriendResponse.prototype.getReceiveruserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendResponse} returns this\n */\nproto.chat.FriendResponse.prototype.setReceiveruserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool acceptFQ = 3;\n * @return {boolean}\n */\nproto.chat.FriendResponse.prototype.getAcceptfq = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.chat.FriendResponse} returns this\n */\nproto.chat.FriendResponse.prototype.setAcceptfq = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.Empty}\n */\nproto.chat.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.Empty;\n  return proto.chat.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.Empty}\n */\nproto.chat.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.UserPfpRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.UserPfpRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.UserPfpRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserPfpRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\nuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\npfppic: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.UserPfpRequest}\n */\nproto.chat.UserPfpRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.UserPfpRequest;\n  return proto.chat.UserPfpRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.UserPfpRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.UserPfpRequest}\n */\nproto.chat.UserPfpRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPfppic(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.UserPfpRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.UserPfpRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.UserPfpRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserPfpRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPfppic();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.UserPfpRequest.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserPfpRequest} returns this\n */\nproto.chat.UserPfpRequest.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string pfpPic = 2;\n * @return {string}\n */\nproto.chat.UserPfpRequest.prototype.getPfppic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserPfpRequest} returns this\n */\nproto.chat.UserPfpRequest.prototype.setPfppic = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.EnterRoom.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.EnterRoom.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.EnterRoom} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.EnterRoom.toObject = function(includeInstance, msg) {\n  var f, obj = {\nuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nroomid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nusername: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.EnterRoom}\n */\nproto.chat.EnterRoom.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.EnterRoom;\n  return proto.chat.EnterRoom.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.EnterRoom} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.EnterRoom}\n */\nproto.chat.EnterRoom.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoomid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.EnterRoom.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.EnterRoom.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.EnterRoom} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.EnterRoom.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRoomid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.EnterRoom.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.EnterRoom} returns this\n */\nproto.chat.EnterRoom.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string roomId = 2;\n * @return {string}\n */\nproto.chat.EnterRoom.prototype.getRoomid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.EnterRoom} returns this\n */\nproto.chat.EnterRoom.prototype.setRoomid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.chat.EnterRoom.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.EnterRoom} returns this\n */\nproto.chat.EnterRoom.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.FriendRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.FriendRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.FriendRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.FriendRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\nsenderuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nreceiveruserid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nmessage: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\ndate: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.FriendRequest}\n */\nproto.chat.FriendRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.FriendRequest;\n  return proto.chat.FriendRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.FriendRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.FriendRequest}\n */\nproto.chat.FriendRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSenderuserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReceiveruserid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.FriendRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.FriendRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.FriendRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.FriendRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSenderuserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getReceiveruserid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDate();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string senderUserId = 1;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getSenderuserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setSenderuserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string receiverUserId = 2;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getReceiveruserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setReceiveruserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string message = 3;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string date = 4;\n * @return {string}\n */\nproto.chat.FriendRequest.prototype.getDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.FriendRequest} returns this\n */\nproto.chat.FriendRequest.prototype.setDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\nuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.User}\n */\nproto.chat.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.User;\n  return proto.chat.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.User}\n */\nproto.chat.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.User.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.User} returns this\n */\nproto.chat.User.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.Friend.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.Friend.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.Friend} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Friend.toObject = function(includeInstance, msg) {\n  var f, obj = {\nuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nusername: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nuserpfp: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.Friend}\n */\nproto.chat.Friend.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.Friend;\n  return proto.chat.Friend.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.Friend} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.Friend}\n */\nproto.chat.Friend.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserpfp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.Friend.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.Friend.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.Friend} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Friend.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUserpfp();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.Friend.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.Friend} returns this\n */\nproto.chat.Friend.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string userName = 2;\n * @return {string}\n */\nproto.chat.Friend.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.Friend} returns this\n */\nproto.chat.Friend.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string userPfp = 3;\n * @return {string}\n */\nproto.chat.Friend.prototype.getUserpfp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.Friend} returns this\n */\nproto.chat.Friend.prototype.setUserpfp = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.Room.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.Room.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.Room} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Room.toObject = function(includeInstance, msg) {\n  var f, obj = {\nroomid: jspb.Message.getFieldWithDefault(msg, 1, 0),\nroomname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nroompfp: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.Room}\n */\nproto.chat.Room.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.Room;\n  return proto.chat.Room.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.Room} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.Room}\n */\nproto.chat.Room.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRoomid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoomname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoompfp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.Room.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.Room.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.Room} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.Room.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRoomid();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getRoomname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRoompfp();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 roomId = 1;\n * @return {number}\n */\nproto.chat.Room.prototype.getRoomid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.chat.Room} returns this\n */\nproto.chat.Room.prototype.setRoomid = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string roomName = 2;\n * @return {string}\n */\nproto.chat.Room.prototype.getRoomname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.Room} returns this\n */\nproto.chat.Room.prototype.setRoomname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string roomPfp = 3;\n * @return {string}\n */\nproto.chat.Room.prototype.getRoompfp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.Room} returns this\n */\nproto.chat.Room.prototype.setRoompfp = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.UserInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.UserInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.UserInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\nusername: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nuserpfp: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nuserdata: (f = msg.getUserdata()) && proto.chat.UserListResponse.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.UserInfoResponse}\n */\nproto.chat.UserInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.UserInfoResponse;\n  return proto.chat.UserInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.UserInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.UserInfoResponse}\n */\nproto.chat.UserInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserpfp(value);\n      break;\n    case 3:\n      var value = new proto.chat.UserListResponse;\n      reader.readMessage(value,proto.chat.UserListResponse.deserializeBinaryFromReader);\n      msg.setUserdata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.UserInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.UserInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.UserInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUserpfp();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUserdata();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.chat.UserListResponse.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string userName = 1;\n * @return {string}\n */\nproto.chat.UserInfoResponse.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserInfoResponse} returns this\n */\nproto.chat.UserInfoResponse.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string userPfp = 2;\n * @return {string}\n */\nproto.chat.UserInfoResponse.prototype.getUserpfp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.UserInfoResponse} returns this\n */\nproto.chat.UserInfoResponse.prototype.setUserpfp = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional UserListResponse userData = 3;\n * @return {?proto.chat.UserListResponse}\n */\nproto.chat.UserInfoResponse.prototype.getUserdata = function() {\n  return /** @type{?proto.chat.UserListResponse} */ (\n    jspb.Message.getWrapperField(this, proto.chat.UserListResponse, 3));\n};\n\n\n/**\n * @param {?proto.chat.UserListResponse|undefined} value\n * @return {!proto.chat.UserInfoResponse} returns this\n*/\nproto.chat.UserInfoResponse.prototype.setUserdata = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.chat.UserInfoResponse} returns this\n */\nproto.chat.UserInfoResponse.prototype.clearUserdata = function() {\n  return this.setUserdata(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.chat.UserInfoResponse.prototype.hasUserdata = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.chat.UserListResponse.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.UserListResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.UserListResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.UserListResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserListResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\nfriendsList: jspb.Message.toObjectList(msg.getFriendsList(),\n    proto.chat.Friend.toObject, includeInstance),\nroomsList: jspb.Message.toObjectList(msg.getRoomsList(),\n    proto.chat.Room.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.UserListResponse}\n */\nproto.chat.UserListResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.UserListResponse;\n  return proto.chat.UserListResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.UserListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.UserListResponse}\n */\nproto.chat.UserListResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.chat.Friend;\n      reader.readMessage(value,proto.chat.Friend.deserializeBinaryFromReader);\n      msg.addFriends(value);\n      break;\n    case 2:\n      var value = new proto.chat.Room;\n      reader.readMessage(value,proto.chat.Room.deserializeBinaryFromReader);\n      msg.addRooms(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.UserListResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.UserListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.UserListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.UserListResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFriendsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.chat.Friend.serializeBinaryToWriter\n    );\n  }\n  f = message.getRoomsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.chat.Room.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Friend friends = 1;\n * @return {!Array<!proto.chat.Friend>}\n */\nproto.chat.UserListResponse.prototype.getFriendsList = function() {\n  return /** @type{!Array<!proto.chat.Friend>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.chat.Friend, 1));\n};\n\n\n/**\n * @param {!Array<!proto.chat.Friend>} value\n * @return {!proto.chat.UserListResponse} returns this\n*/\nproto.chat.UserListResponse.prototype.setFriendsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.chat.Friend=} opt_value\n * @param {number=} opt_index\n * @return {!proto.chat.Friend}\n */\nproto.chat.UserListResponse.prototype.addFriends = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.chat.Friend, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.chat.UserListResponse} returns this\n */\nproto.chat.UserListResponse.prototype.clearFriendsList = function() {\n  return this.setFriendsList([]);\n};\n\n\n/**\n * repeated Room rooms = 2;\n * @return {!Array<!proto.chat.Room>}\n */\nproto.chat.UserListResponse.prototype.getRoomsList = function() {\n  return /** @type{!Array<!proto.chat.Room>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.chat.Room, 2));\n};\n\n\n/**\n * @param {!Array<!proto.chat.Room>} value\n * @return {!proto.chat.UserListResponse} returns this\n*/\nproto.chat.UserListResponse.prototype.setRoomsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.chat.Room=} opt_value\n * @param {number=} opt_index\n * @return {!proto.chat.Room}\n */\nproto.chat.UserListResponse.prototype.addRooms = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.chat.Room, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.chat.UserListResponse} returns this\n */\nproto.chat.UserListResponse.prototype.clearRoomsList = function() {\n  return this.setRoomsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.RoomRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.RoomRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.RoomRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.RoomRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\nuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nroomid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nusername: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\nmessage: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.RoomRequest}\n */\nproto.chat.RoomRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.RoomRequest;\n  return proto.chat.RoomRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.RoomRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.RoomRequest}\n */\nproto.chat.RoomRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoomid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.RoomRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.RoomRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.RoomRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.RoomRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRoomid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string roomId = 2;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getRoomid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setRoomid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string message = 4;\n * @return {string}\n */\nproto.chat.RoomRequest.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.RoomRequest} returns this\n */\nproto.chat.RoomRequest.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.ChatMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.ChatMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.ChatMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.ChatMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\nuserid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\nroomid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\nusername: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\nmessage: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\nurl: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.ChatMessage}\n */\nproto.chat.ChatMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.ChatMessage;\n  return proto.chat.ChatMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.ChatMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.ChatMessage}\n */\nproto.chat.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRoomid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.ChatMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.chat.ChatMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.chat.ChatMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.chat.ChatMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRoomid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userId = 1;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string roomId = 2;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getRoomid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setRoomid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string message = 4;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string url = 5;\n * @return {string}\n */\nproto.chat.ChatMessage.prototype.getUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.setUrl = function(value) {\n  return jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.chat.ChatMessage} returns this\n */\nproto.chat.ChatMessage.prototype.clearUrl = function() {\n  return jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.chat.ChatMessage.prototype.hasUrl = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\ngoog.object.extend(exports, proto.chat);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACrC,IAAIC,IAAI,GAAGF,IAAI;AACf,IAAIG,MAAM,GACL,OAAOC,UAAU,KAAK,WAAW,IAAIA,UAAU,IAC/C,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAO,IACxC,OAAOF,MAAM,KAAK,WAAW,IAAIA,MAAO,IACxC,OAAOG,IAAI,KAAK,WAAW,IAAIA,IAAK,IACpC,YAAY;EAAE,OAAO,IAAI;AAAE,CAAC,CAAEC,IAAI,CAAC,IAAI,CAAC,IACzCC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;AAE7BN,IAAI,CAACO,YAAY,CAAC,wBAAwB,EAAE,IAAI,EAAEN,MAAM,CAAC;AACzDD,IAAI,CAACO,YAAY,CAAC,kBAAkB,EAAE,IAAI,EAAEN,MAAM,CAAC;AACnDD,IAAI,CAACO,YAAY,CAAC,sBAAsB,EAAE,IAAI,EAAEN,MAAM,CAAC;AACvDD,IAAI,CAACO,YAAY,CAAC,mBAAmB,EAAE,IAAI,EAAEN,MAAM,CAAC;AACpDD,IAAI,CAACO,YAAY,CAAC,0BAA0B,EAAE,IAAI,EAAEN,MAAM,CAAC;AAC3DD,IAAI,CAACO,YAAY,CAAC,2BAA2B,EAAE,IAAI,EAAEN,MAAM,CAAC;AAC5DD,IAAI,CAACO,YAAY,CAAC,iBAAiB,EAAE,IAAI,EAAEN,MAAM,CAAC;AAClDD,IAAI,CAACO,YAAY,CAAC,wBAAwB,EAAE,IAAI,EAAEN,MAAM,CAAC;AACzDD,IAAI,CAACO,YAAY,CAAC,iBAAiB,EAAE,IAAI,EAAEN,MAAM,CAAC;AAClDD,IAAI,CAACO,YAAY,CAAC,6BAA6B,EAAE,IAAI,EAAEN,MAAM,CAAC;AAC9DD,IAAI,CAACO,YAAY,CAAC,6BAA6B,EAAE,IAAI,EAAEN,MAAM,CAAC;AAC9DD,IAAI,CAACO,YAAY,CAAC,2BAA2B,EAAE,IAAI,EAAEN,MAAM,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAO,KAAK,CAACC,IAAI,CAACC,cAAc,GAAG,UAASC,QAAQ,EAAE;EAC7Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACC,cAAc,EAAEZ,IAAI,CAACc,OAAO,CAAC;AACtD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACC,cAAc,CAACO,WAAW,GAAG,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACS,KAAK,GAAG,UAASP,QAAQ,EAAE;EACpCb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACS,KAAK,EAAEpB,IAAI,CAACc,OAAO,CAAC;AAC7C,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACS,KAAK,CAACD,WAAW,GAAG,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACU,cAAc,GAAG,UAASR,QAAQ,EAAE;EAC7Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACU,cAAc,EAAErB,IAAI,CAACc,OAAO,CAAC;AACtD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACU,cAAc,CAACF,WAAW,GAAG,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACW,SAAS,GAAG,UAAST,QAAQ,EAAE;EACxCb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACW,SAAS,EAAEtB,IAAI,CAACc,OAAO,CAAC;AACjD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACW,SAAS,CAACH,WAAW,GAAG,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACY,aAAa,GAAG,UAASV,QAAQ,EAAE;EAC5Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACY,aAAa,EAAEvB,IAAI,CAACc,OAAO,CAAC;AACrD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACY,aAAa,CAACJ,WAAW,GAAG,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACa,IAAI,GAAG,UAASX,QAAQ,EAAE;EACnCb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACa,IAAI,EAAExB,IAAI,CAACc,OAAO,CAAC;AAC5C,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACa,IAAI,CAACL,WAAW,GAAG,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACc,MAAM,GAAG,UAASZ,QAAQ,EAAE;EACrCb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACc,MAAM,EAAEzB,IAAI,CAACc,OAAO,CAAC;AAC9C,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACc,MAAM,CAACN,WAAW,GAAG,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACe,IAAI,GAAG,UAASb,QAAQ,EAAE;EACnCb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACe,IAAI,EAAE1B,IAAI,CAACc,OAAO,CAAC;AAC5C,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACe,IAAI,CAACP,WAAW,GAAG,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACgB,gBAAgB,GAAG,UAASd,QAAQ,EAAE;EAC/Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACgB,gBAAgB,EAAE3B,IAAI,CAACc,OAAO,CAAC;AACxD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACR,WAAW,GAAG,6BAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACiB,gBAAgB,GAAG,UAASf,QAAQ,EAAE;EAC/Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEH,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACC,eAAe,EAAE,IAAI,CAAC;AACnG,CAAC;AACD3B,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACiB,gBAAgB,EAAE5B,IAAI,CAACc,OAAO,CAAC;AACxD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACT,WAAW,GAAG,6BAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACmB,WAAW,GAAG,UAASjB,QAAQ,EAAE;EAC1Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACmB,WAAW,EAAE9B,IAAI,CAACc,OAAO,CAAC;AACnD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACX,WAAW,GAAG,wBAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,KAAK,CAACC,IAAI,CAACoB,WAAW,GAAG,UAASlB,QAAQ,EAAE;EAC1Cb,IAAI,CAACc,OAAO,CAACC,UAAU,CAAC,IAAI,EAAEF,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5D,CAAC;AACDX,IAAI,CAACc,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACoB,WAAW,EAAE/B,IAAI,CAACc,OAAO,CAAC;AACnD,IAAIZ,IAAI,CAACe,KAAK,IAAI,CAACC,QAAQ,EAAE;EAC3B;AACF;AACA;AACA;EACER,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACZ,WAAW,GAAG,wBAAwB;AAC/D;AAIA,IAAInB,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IAC3E,OAAOzB,KAAK,CAACC,IAAI,CAACC,cAAc,CAACsB,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACtE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACC,cAAc,CAACsB,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IAClE,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfC,YAAY,EAAExC,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC1DK,cAAc,EAAE1C,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC5DM,QAAQ,EAAE3C,IAAI,CAACc,OAAO,CAAC8B,0BAA0B,CAACP,GAAG,EAAE,CAAC,EAAE,KAAK;MAC7D,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACC,cAAc,CAACkC,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAC5D,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACC,cAAc,CAAD,CAAC;EACvC,OAAOF,KAAK,CAACC,IAAI,CAACC,cAAc,CAACsC,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AAC3E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACC,cAAc,CAACsC,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAC5E,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACoB,eAAe,CAACF,KAAK,CAAC;QAC1B;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACqB,iBAAiB,CAACH,KAAK,CAAC;QAC5B;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,sBAAwBP,MAAM,CAACW,QAAQ,CAAC,CAAE;QACtDtB,GAAG,CAACuB,WAAW,CAACL,KAAK,CAAC;QACtB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAAC6B,eAAe,GAAG,YAAW;EAC/D,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqD,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EAC/D,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqD,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAC5E,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACE,eAAe,CAAC,CAAC;EAC7B,IAAI/B,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACK,iBAAiB,CAAC,CAAC;EAC/B,IAAIlC,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACM,WAAW,CAAC,CAAC;EACzB,IAAInC,CAAC,EAAE;IACLyB,MAAM,CAACW,SAAS,CACd,CAAC,EACDpC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAACoC,eAAe,GAAG,YAAW;EAC/D,OAAO,qBAAuBrE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAACwB,eAAe,GAAG,UAASF,KAAK,EAAE;EACpE,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAACuC,iBAAiB,GAAG,YAAW;EACjE,OAAO,qBAAuBxE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAACyB,iBAAiB,GAAG,UAASH,KAAK,EAAE;EACtE,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAACwC,WAAW,GAAG,YAAW;EAC3D,OAAO,sBAAwBzE,IAAI,CAACc,OAAO,CAAC8B,0BAA0B,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC;AACxF,CAAC;;AAGD;AACA;AACA;AACA;AACAlC,KAAK,CAACC,IAAI,CAACC,cAAc,CAACqB,SAAS,CAAC2B,WAAW,GAAG,UAASL,KAAK,EAAE;EAChE,OAAOvD,IAAI,CAACc,OAAO,CAAC8D,qBAAqB,CAAC,IAAI,EAAE,CAAC,EAAErB,KAAK,CAAC;AAC3D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACS,KAAK,CAACa,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IAClE,OAAOzB,KAAK,CAACC,IAAI,CAACS,KAAK,CAACc,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EAC7D,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACS,KAAK,CAACc,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IACzD,IAAIC,CAAC;MAAEC,GAAG,GAAG,CAEb,CAAC;IAED,IAAIH,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACS,KAAK,CAAC0B,iBAAiB,GAAG,UAASC,KAAK,EAAE;EACnD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACS,KAAK,CAAD,CAAC;EAC9B,OAAOV,KAAK,CAACC,IAAI,CAACS,KAAK,CAAC8B,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AAClE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACS,KAAK,CAAC8B,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EACnE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb;QACEL,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACS,KAAK,CAACa,SAAS,CAAC6B,eAAe,GAAG,YAAW;EACtD,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACS,KAAK,CAAC6C,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EACtD,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACS,KAAK,CAAC6C,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EACnE,IAAIzB,CAAC,GAAG8B,SAAS;AACnB,CAAC;AAMD,IAAIpE,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACU,cAAc,CAACY,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IAC3E,OAAOzB,KAAK,CAACC,IAAI,CAACU,cAAc,CAACa,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACtE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACU,cAAc,CAACa,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IAClE,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfsC,MAAM,EAAE7E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpDyC,MAAM,EAAE9E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MACjD,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACU,cAAc,CAACyB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAC5D,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACU,cAAc,CAAD,CAAC;EACvC,OAAOX,KAAK,CAACC,IAAI,CAACU,cAAc,CAAC6B,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AAC3E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACU,cAAc,CAAC6B,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAC5E,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0C,SAAS,CAACxB,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC2C,SAAS,CAACzB,KAAK,CAAC;QACpB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACU,cAAc,CAACY,SAAS,CAAC6B,eAAe,GAAG,YAAW;EAC/D,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACU,cAAc,CAAC4C,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EAC/D,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACU,cAAc,CAAC4C,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAC5E,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACc,SAAS,CAAC,CAAC;EACvB,IAAI3C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACe,SAAS,CAAC,CAAC;EACvB,IAAI5C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACU,cAAc,CAACY,SAAS,CAACgD,SAAS,GAAG,YAAW;EACzD,OAAO,qBAAuBjF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACU,cAAc,CAACY,SAAS,CAAC8C,SAAS,GAAG,UAASxB,KAAK,EAAE;EAC9D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACU,cAAc,CAACY,SAAS,CAACiD,SAAS,GAAG,YAAW;EACzD,OAAO,qBAAuBlF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACU,cAAc,CAACY,SAAS,CAAC+C,SAAS,GAAG,UAASzB,KAAK,EAAE;EAC9D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IACtE,OAAOzB,KAAK,CAACC,IAAI,CAACW,SAAS,CAACY,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACjE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACW,SAAS,CAACY,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IAC7D,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfsC,MAAM,EAAE7E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD8C,MAAM,EAAEnF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD+C,QAAQ,EAAEpF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MACnD,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACW,SAAS,CAACwB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EACvD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACW,SAAS,CAAD,CAAC;EAClC,OAAOZ,KAAK,CAACC,IAAI,CAACW,SAAS,CAAC4B,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AACtE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACW,SAAS,CAAC4B,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EACvE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0C,SAAS,CAACxB,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACgD,SAAS,CAAC9B,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACiD,WAAW,CAAC/B,KAAK,CAAC;QACtB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAAC6B,eAAe,GAAG,YAAW;EAC1D,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACW,SAAS,CAAC2C,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EAC1D,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACW,SAAS,CAAC2C,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EACvE,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACc,SAAS,CAAC,CAAC;EACvB,IAAI3C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACoB,SAAS,CAAC,CAAC;EACvB,IAAIjD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACqB,WAAW,CAAC,CAAC;EACzB,IAAIlD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAACgD,SAAS,GAAG,YAAW;EACpD,OAAO,qBAAuBjF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAAC8C,SAAS,GAAG,UAASxB,KAAK,EAAE;EACzD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAACsD,SAAS,GAAG,YAAW;EACpD,OAAO,qBAAuBvF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAACoD,SAAS,GAAG,UAAS9B,KAAK,EAAE;EACzD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAACuD,WAAW,GAAG,YAAW;EACtD,OAAO,qBAAuBxF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACW,SAAS,CAACW,SAAS,CAACqD,WAAW,GAAG,UAAS/B,KAAK,EAAE;EAC3D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IAC1E,OAAOzB,KAAK,CAACC,IAAI,CAACY,aAAa,CAACW,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACrE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACY,aAAa,CAACW,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IACjE,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfC,YAAY,EAAExC,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC1DK,cAAc,EAAE1C,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC5D8B,OAAO,EAAEnE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACrDoD,IAAI,EAAEzF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MAC/C,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACuB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAC3D,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACY,aAAa,CAAD,CAAC;EACtC,OAAOb,KAAK,CAACC,IAAI,CAACY,aAAa,CAAC2B,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AAC1E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACY,aAAa,CAAC2B,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAC3E,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACoB,eAAe,CAACF,KAAK,CAAC;QAC1B;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACqB,iBAAiB,CAACH,KAAK,CAAC;QAC5B;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACqD,UAAU,CAACnC,KAAK,CAAC;QACrB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACsD,OAAO,CAACpC,KAAK,CAAC;QAClB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAAC6B,eAAe,GAAG,YAAW;EAC9D,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACY,aAAa,CAAC0C,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EAC9D,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACY,aAAa,CAAC0C,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAC3E,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACE,eAAe,CAAC,CAAC;EAC7B,IAAI/B,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACK,iBAAiB,CAAC,CAAC;EAC/B,IAAIlC,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACyB,UAAU,CAAC,CAAC;EACxB,IAAItD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAAC0B,OAAO,CAAC,CAAC;EACrB,IAAIvD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAACoC,eAAe,GAAG,YAAW;EAC9D,OAAO,qBAAuBrE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAACwB,eAAe,GAAG,UAASF,KAAK,EAAE;EACnE,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAACuC,iBAAiB,GAAG,YAAW;EAChE,OAAO,qBAAuBxE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAACyB,iBAAiB,GAAG,UAASH,KAAK,EAAE;EACrE,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAAC2D,UAAU,GAAG,YAAW;EACzD,OAAO,qBAAuB5F,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAACyD,UAAU,GAAG,UAASnC,KAAK,EAAE;EAC9D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAAC4D,OAAO,GAAG,YAAW;EACtD,OAAO,qBAAuB7F,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACY,aAAa,CAACU,SAAS,CAAC0D,OAAO,GAAG,UAASpC,KAAK,EAAE;EAC3D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACa,IAAI,CAACS,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IACjE,OAAOzB,KAAK,CAACC,IAAI,CAACa,IAAI,CAACU,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EAC5D,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACa,IAAI,CAACU,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IACxD,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfsC,MAAM,EAAE7E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MACjD,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACa,IAAI,CAACsB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAClD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACa,IAAI,CAAD,CAAC;EAC7B,OAAOd,KAAK,CAACC,IAAI,CAACa,IAAI,CAAC0B,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AACjE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACa,IAAI,CAAC0B,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAClE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0C,SAAS,CAACxB,KAAK,CAAC;QACpB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACa,IAAI,CAACS,SAAS,CAAC6B,eAAe,GAAG,YAAW;EACrD,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACa,IAAI,CAACyC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EACrD,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACa,IAAI,CAACyC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAClE,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACc,SAAS,CAAC,CAAC;EACvB,IAAI3C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACa,IAAI,CAACS,SAAS,CAACgD,SAAS,GAAG,YAAW;EAC/C,OAAO,qBAAuBjF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACa,IAAI,CAACS,SAAS,CAAC8C,SAAS,GAAG,UAASxB,KAAK,EAAE;EACpD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IACnE,OAAOzB,KAAK,CAACC,IAAI,CAACc,MAAM,CAACS,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EAC9D,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACc,MAAM,CAACS,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IAC1D,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfsC,MAAM,EAAE7E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD+C,QAAQ,EAAEpF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACtDyD,OAAO,EAAE9F,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MAClD,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACqB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EACpD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACc,MAAM,CAAD,CAAC;EAC/B,OAAOf,KAAK,CAACC,IAAI,CAACc,MAAM,CAACyB,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AACnE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACc,MAAM,CAACyB,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EACpE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0C,SAAS,CAACxB,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACiD,WAAW,CAAC/B,KAAK,CAAC;QACtB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0D,UAAU,CAACxC,KAAK,CAAC;QACrB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAAC6B,eAAe,GAAG,YAAW;EACvD,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACc,MAAM,CAACwC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EACvD,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACc,MAAM,CAACwC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EACpE,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACc,SAAS,CAAC,CAAC;EACvB,IAAI3C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACqB,WAAW,CAAC,CAAC;EACzB,IAAIlD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAAC6B,UAAU,CAAC,CAAC;EACxB,IAAI1D,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAACgD,SAAS,GAAG,YAAW;EACjD,OAAO,qBAAuBjF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAAC8C,SAAS,GAAG,UAASxB,KAAK,EAAE;EACtD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAACuD,WAAW,GAAG,YAAW;EACnD,OAAO,qBAAuBxF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAACqD,WAAW,GAAG,UAAS/B,KAAK,EAAE;EACxD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAAC+D,UAAU,GAAG,YAAW;EAClD,OAAO,qBAAuBhG,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACQ,SAAS,CAAC8D,UAAU,GAAG,UAASxC,KAAK,EAAE;EACvD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IACjE,OAAOzB,KAAK,CAACC,IAAI,CAACe,IAAI,CAACQ,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EAC5D,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACe,IAAI,CAACQ,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IACxD,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACf4C,MAAM,EAAEnF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACnD4D,QAAQ,EAAEjG,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACtD6D,OAAO,EAAElG,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MAClD,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACoB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAClD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACe,IAAI,CAAD,CAAC;EAC7B,OAAOhB,KAAK,CAACC,IAAI,CAACe,IAAI,CAACwB,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AACjE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACe,IAAI,CAACwB,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAClE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACmD,UAAU,CAAC,CAAE;QACvD9D,GAAG,CAACgD,SAAS,CAAC9B,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC+D,WAAW,CAAC7C,KAAK,CAAC;QACtB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACgE,UAAU,CAAC9C,KAAK,CAAC;QACrB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAAC6B,eAAe,GAAG,YAAW;EACrD,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACe,IAAI,CAACuC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EACrD,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACe,IAAI,CAACuC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAClE,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACoB,SAAS,CAAC,CAAC;EACvB,IAAIjD,CAAC,KAAK,CAAC,EAAE;IACXyB,MAAM,CAACuC,WAAW,CAChB,CAAC,EACDhE,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACoC,WAAW,CAAC,CAAC;EACzB,IAAIjE,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACqC,UAAU,CAAC,CAAC;EACxB,IAAIlE,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACsD,SAAS,GAAG,YAAW;EAC/C,OAAO,qBAAuBvF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACoD,SAAS,GAAG,UAAS9B,KAAK,EAAE;EACpD,OAAOvD,IAAI,CAACc,OAAO,CAAC2F,iBAAiB,CAAC,IAAI,EAAE,CAAC,EAAElD,KAAK,CAAC;AACvD,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACsE,WAAW,GAAG,YAAW;EACjD,OAAO,qBAAuBvG,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACmE,WAAW,GAAG,UAAS7C,KAAK,EAAE;EACtD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACuE,UAAU,GAAG,YAAW;EAChD,OAAO,qBAAuBxG,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACO,SAAS,CAACoE,UAAU,GAAG,UAAS9C,KAAK,EAAE;EACrD,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IAC7E,OAAOzB,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACO,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACxE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACO,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IACpE,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACf6C,QAAQ,EAAEpF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACtDyD,OAAO,EAAE9F,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACrDqE,QAAQ,EAAE,CAACpE,CAAC,GAAGD,GAAG,CAACsE,WAAW,CAAC,CAAC,KAAKjG,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACM,QAAQ,CAACE,eAAe,EAAEE,CAAC;MAC1F,CAAC;IAED,IAAIF,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACmB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAC9D,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAAD,CAAC;EACzC,OAAOjB,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACuB,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACuB,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAC9E,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACiD,WAAW,CAAC/B,KAAK,CAAC;QACtB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0D,UAAU,CAACxC,KAAK,CAAC;QACrB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,IAAI7C,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAAD,CAAC;QAC3CoB,MAAM,CAAC4D,WAAW,CAACrD,KAAK,EAAC7C,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACsB,2BAA2B,CAAC;QACjFb,GAAG,CAACwE,WAAW,CAACtD,KAAK,CAAC;QACtB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAAC6B,eAAe,GAAG,YAAW;EACjE,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACsC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EACjE,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACsC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAC9E,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACqB,WAAW,CAAC,CAAC;EACzB,IAAIlD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAAC6B,UAAU,CAAC,CAAC;EACxB,IAAI1D,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACwC,WAAW,CAAC,CAAC;EACzB,IAAIrE,CAAC,IAAI,IAAI,EAAE;IACbyB,MAAM,CAAC+C,YAAY,CACjB,CAAC,EACDxE,CAAC,EACD5B,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACqC,uBAC9B,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACAvD,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAACuD,WAAW,GAAG,YAAW;EAC7D,OAAO,qBAAuBxF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAACqD,WAAW,GAAG,UAAS/B,KAAK,EAAE;EAClE,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAAC+D,UAAU,GAAG,YAAW;EAC5D,OAAO,qBAAuBhG,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAAC8D,UAAU,GAAG,UAASxC,KAAK,EAAE;EACjE,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAAC0E,WAAW,GAAG,YAAW;EAC7D,OAAO;IACL3G,IAAI,CAACc,OAAO,CAACiG,eAAe,CAAC,IAAI,EAAErG,KAAK,CAACC,IAAI,CAACiB,gBAAgB,EAAE,CAAC;EAAC;AACtE,CAAC;;AAGD;AACA;AACA;AACA;AACAlB,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAAC4E,WAAW,GAAG,UAAStD,KAAK,EAAE;EAClE,OAAOvD,IAAI,CAACc,OAAO,CAACkG,eAAe,CAAC,IAAI,EAAE,CAAC,EAAEzD,KAAK,CAAC;AACrD,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAACgF,aAAa,GAAG,YAAW;EAC/D,OAAO,IAAI,CAACJ,WAAW,CAACzC,SAAS,CAAC;AACpC,CAAC;;AAGD;AACA;AACA;AACA;AACA1D,KAAK,CAACC,IAAI,CAACgB,gBAAgB,CAACM,SAAS,CAACiF,WAAW,GAAG,YAAW;EAC7D,OAAOlH,IAAI,CAACc,OAAO,CAACqG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI;AAC/C,CAAC;;AAID;AACA;AACA;AACA;AACA;AACAzG,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACC,eAAe,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC;AAInD,IAAI7B,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IAC7E,OAAOzB,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACM,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACxE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACM,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IACpE,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACf6E,WAAW,EAAEpH,IAAI,CAACc,OAAO,CAACuG,YAAY,CAAChF,GAAG,CAACiF,cAAc,CAAC,CAAC,EACvD5G,KAAK,CAACC,IAAI,CAACc,MAAM,CAACS,QAAQ,EAAEE,eAAe,CAAC;QAChDmF,SAAS,EAAEvH,IAAI,CAACc,OAAO,CAACuG,YAAY,CAAChF,GAAG,CAACmF,YAAY,CAAC,CAAC,EACnD9G,KAAK,CAACC,IAAI,CAACe,IAAI,CAACQ,QAAQ,EAAEE,eAAe;MAC3C,CAAC;IAED,IAAIA,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACkB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EAC9D,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAAD,CAAC;EACzC,OAAOlB,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACsB,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACsB,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EAC9E,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,IAAI7C,KAAK,CAACC,IAAI,CAACc,MAAM,CAAD,CAAC;QACjCuB,MAAM,CAAC4D,WAAW,CAACrD,KAAK,EAAC7C,KAAK,CAACC,IAAI,CAACc,MAAM,CAACyB,2BAA2B,CAAC;QACvEb,GAAG,CAACoF,UAAU,CAAClE,KAAK,CAAC;QACrB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,IAAI7C,KAAK,CAACC,IAAI,CAACe,IAAI,CAAD,CAAC;QAC/BsB,MAAM,CAAC4D,WAAW,CAACrD,KAAK,EAAC7C,KAAK,CAACC,IAAI,CAACe,IAAI,CAACwB,2BAA2B,CAAC;QACrEb,GAAG,CAACqF,QAAQ,CAACnE,KAAK,CAAC;QACnB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAAC6B,eAAe,GAAG,YAAW;EACjE,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACqC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EACjE,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACqC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EAC9E,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACmD,cAAc,CAAC,CAAC;EAC5B,IAAIhF,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAAC4D,oBAAoB,CACzB,CAAC,EACDrF,CAAC,EACD5B,KAAK,CAACC,IAAI,CAACc,MAAM,CAACwC,uBACpB,CAAC;EACH;EACA3B,CAAC,GAAG6B,OAAO,CAACqD,YAAY,CAAC,CAAC;EAC1B,IAAIlF,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAAC4D,oBAAoB,CACzB,CAAC,EACDrF,CAAC,EACD5B,KAAK,CAACC,IAAI,CAACe,IAAI,CAACuC,uBAClB,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACAvD,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACqF,cAAc,GAAG,YAAW;EAChE,OAAO;IACLtH,IAAI,CAACc,OAAO,CAAC8G,uBAAuB,CAAC,IAAI,EAAElH,KAAK,CAACC,IAAI,CAACc,MAAM,EAAE,CAAC;EAAC;AACpE,CAAC;;AAGD;AACA;AACA;AACA;AACAf,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAAC4F,cAAc,GAAG,UAAStE,KAAK,EAAE;EACrE,OAAOvD,IAAI,CAACc,OAAO,CAACgH,uBAAuB,CAAC,IAAI,EAAE,CAAC,EAAEvE,KAAK,CAAC;AAC7D,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACwF,UAAU,GAAG,UAASM,SAAS,EAAEC,SAAS,EAAE;EAChF,OAAOhI,IAAI,CAACc,OAAO,CAACmH,yBAAyB,CAAC,IAAI,EAAE,CAAC,EAAEF,SAAS,EAAErH,KAAK,CAACC,IAAI,CAACc,MAAM,EAAEuG,SAAS,CAAC;AACjG,CAAC;;AAGD;AACA;AACA;AACA;AACAtH,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACiG,gBAAgB,GAAG,YAAW;EAClE,OAAO,IAAI,CAACL,cAAc,CAAC,EAAE,CAAC;AAChC,CAAC;;AAGD;AACA;AACA;AACA;AACAnH,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACuF,YAAY,GAAG,YAAW;EAC9D,OAAO;IACLxH,IAAI,CAACc,OAAO,CAAC8G,uBAAuB,CAAC,IAAI,EAAElH,KAAK,CAACC,IAAI,CAACe,IAAI,EAAE,CAAC;EAAC;AAClE,CAAC;;AAGD;AACA;AACA;AACA;AACAhB,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACkG,YAAY,GAAG,UAAS5E,KAAK,EAAE;EACnE,OAAOvD,IAAI,CAACc,OAAO,CAACgH,uBAAuB,CAAC,IAAI,EAAE,CAAC,EAAEvE,KAAK,CAAC;AAC7D,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACyF,QAAQ,GAAG,UAASK,SAAS,EAAEC,SAAS,EAAE;EAC9E,OAAOhI,IAAI,CAACc,OAAO,CAACmH,yBAAyB,CAAC,IAAI,EAAE,CAAC,EAAEF,SAAS,EAAErH,KAAK,CAACC,IAAI,CAACe,IAAI,EAAEsG,SAAS,CAAC;AAC/F,CAAC;;AAGD;AACA;AACA;AACA;AACAtH,KAAK,CAACC,IAAI,CAACiB,gBAAgB,CAACK,SAAS,CAACmG,cAAc,GAAG,YAAW;EAChE,OAAO,IAAI,CAACD,YAAY,CAAC,EAAE,CAAC;AAC9B,CAAC;AAMD,IAAInI,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IACxE,OAAOzB,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACI,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACnE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACI,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IAC/D,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfsC,MAAM,EAAE7E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD8C,MAAM,EAAEnF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD+C,QAAQ,EAAEpF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACtD8B,OAAO,EAAEnE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE;MAClD,CAAC;IAED,IAAID,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACgB,iBAAiB,GAAG,UAASC,KAAK,EAAE;EACzD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAAD,CAAC;EACpC,OAAOpB,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACoB,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AACxE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACoB,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EACzE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0C,SAAS,CAACxB,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACgD,SAAS,CAAC9B,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACiD,WAAW,CAAC/B,KAAK,CAAC;QACtB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACqD,UAAU,CAACnC,KAAK,CAAC;QACrB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAAC6B,eAAe,GAAG,YAAW;EAC5D,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACmC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EAC5D,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACmC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EACzE,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACc,SAAS,CAAC,CAAC;EACvB,IAAI3C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACoB,SAAS,CAAC,CAAC;EACvB,IAAIjD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACqB,WAAW,CAAC,CAAC;EACzB,IAAIlD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACyB,UAAU,CAAC,CAAC;EACxB,IAAItD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACgD,SAAS,GAAG,YAAW;EACtD,OAAO,qBAAuBjF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAAC8C,SAAS,GAAG,UAASxB,KAAK,EAAE;EAC3D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACsD,SAAS,GAAG,YAAW;EACtD,OAAO,qBAAuBvF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACoD,SAAS,GAAG,UAAS9B,KAAK,EAAE;EAC3D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACuD,WAAW,GAAG,YAAW;EACxD,OAAO,qBAAuBxF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACqD,WAAW,GAAG,UAAS/B,KAAK,EAAE;EAC7D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAAC2D,UAAU,GAAG,YAAW;EACvD,OAAO,qBAAuB5F,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACmB,WAAW,CAACG,SAAS,CAACyD,UAAU,GAAG,UAASnC,KAAK,EAAE;EAC5D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;AAMD,IAAIvD,IAAI,CAACc,OAAO,CAACkB,kBAAkB,EAAE;EACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAtB,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACC,QAAQ,GAAG,UAASC,mBAAmB,EAAE;IACxE,OAAOzB,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACG,QAAQ,CAACC,mBAAmB,EAAE,IAAI,CAAC;EACnE,CAAC;;EAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAzB,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACG,QAAQ,GAAG,UAASE,eAAe,EAAEC,GAAG,EAAE;IAC/D,IAAIC,CAAC;MAAEC,GAAG,GAAG;QACfsC,MAAM,EAAE7E,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD8C,MAAM,EAAEnF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACpD+C,QAAQ,EAAEpF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACtD8B,OAAO,EAAEnE,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAACJ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QACrDgG,GAAG,EAAE,CAAC/F,CAAC,GAAGtC,IAAI,CAACc,OAAO,CAACqG,QAAQ,CAAC9E,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG+B,SAAS,GAAG9B;MAC7D,CAAC;IAED,IAAIF,eAAe,EAAE;MACnBG,GAAG,CAACM,oBAAoB,GAAGR,GAAG;IAChC;IACA,OAAOE,GAAG;EACZ,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACA;AACA7B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACe,iBAAiB,GAAG,UAASC,KAAK,EAAE;EACzD,IAAIC,MAAM,GAAG,IAAIhD,IAAI,CAACiD,YAAY,CAACF,KAAK,CAAC;EACzC,IAAIV,GAAG,GAAG,IAAI3B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAAD,CAAC;EACpC,OAAOrB,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACmB,2BAA2B,CAACb,GAAG,EAAEW,MAAM,CAAC;AACxE,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACmB,2BAA2B,GAAG,UAASb,GAAG,EAAEW,MAAM,EAAE;EACzE,OAAOA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAE;IACzB,IAAIH,MAAM,CAACI,UAAU,CAAC,CAAC,EAAE;MACvB;IACF;IACA,IAAIC,KAAK,GAAGL,MAAM,CAACM,cAAc,CAAC,CAAC;IACnC,QAAQD,KAAK;MACb,KAAK,CAAC;QACJ,IAAIE,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAAC0C,SAAS,CAACxB,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACgD,SAAS,CAAC9B,KAAK,CAAC;QACpB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACiD,WAAW,CAAC/B,KAAK,CAAC;QACtB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACqD,UAAU,CAACnC,KAAK,CAAC;QACrB;MACF,KAAK,CAAC;QACJ,IAAIA,KAAK,GAAG,qBAAuBP,MAAM,CAACQ,UAAU,CAAC,CAAE;QACvDnB,GAAG,CAACiG,MAAM,CAAC/E,KAAK,CAAC;QACjB;MACF;QACEP,MAAM,CAACa,SAAS,CAAC,CAAC;QAClB;IACF;EACF;EACA,OAAOxB,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA;AACA3B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAAC6B,eAAe,GAAG,YAAW;EAC5D,IAAIC,MAAM,GAAG,IAAI/D,IAAI,CAACgE,YAAY,CAAC,CAAC;EACpCtD,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACkC,uBAAuB,CAAC,IAAI,EAAEF,MAAM,CAAC;EAC5D,OAAOA,MAAM,CAACG,eAAe,CAAC,CAAC;AACjC,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACAxD,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACkC,uBAAuB,GAAG,UAASE,OAAO,EAAEJ,MAAM,EAAE;EACzE,IAAIzB,CAAC,GAAG8B,SAAS;EACjB9B,CAAC,GAAG6B,OAAO,CAACc,SAAS,CAAC,CAAC;EACvB,IAAI3C,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACoB,SAAS,CAAC,CAAC;EACvB,IAAIjD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACqB,WAAW,CAAC,CAAC;EACzB,IAAIlD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG6B,OAAO,CAACyB,UAAU,CAAC,CAAC;EACxB,IAAItD,CAAC,CAACgC,MAAM,GAAG,CAAC,EAAE;IAChBP,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;EACAA,CAAC,GAAG,qBAAuBtC,IAAI,CAACc,OAAO,CAACqG,QAAQ,CAAChD,OAAO,EAAE,CAAC,CAAE;EAC7D,IAAI7B,CAAC,IAAI,IAAI,EAAE;IACbyB,MAAM,CAACQ,WAAW,CAChB,CAAC,EACDjC,CACF,CAAC;EACH;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA5B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACgD,SAAS,GAAG,YAAW;EACtD,OAAO,qBAAuBjF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAAC8C,SAAS,GAAG,UAASxB,KAAK,EAAE;EAC3D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACsD,SAAS,GAAG,YAAW;EACtD,OAAO,qBAAuBvF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACoD,SAAS,GAAG,UAAS9B,KAAK,EAAE;EAC3D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACuD,WAAW,GAAG,YAAW;EACxD,OAAO,qBAAuBxF,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACqD,WAAW,GAAG,UAAS/B,KAAK,EAAE;EAC7D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAAC2D,UAAU,GAAG,YAAW;EACvD,OAAO,qBAAuB5F,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACyD,UAAU,GAAG,UAASnC,KAAK,EAAE;EAC5D,OAAOvD,IAAI,CAACc,OAAO,CAAC6D,oBAAoB,CAAC,IAAI,EAAE,CAAC,EAAEpB,KAAK,CAAC;AAC1D,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACsG,MAAM,GAAG,YAAW;EACnD,OAAO,qBAAuBvI,IAAI,CAACc,OAAO,CAAC2B,mBAAmB,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;AAC7E,CAAC;;AAGD;AACA;AACA;AACA;AACA/B,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACqG,MAAM,GAAG,UAAS/E,KAAK,EAAE;EACxD,OAAOvD,IAAI,CAACc,OAAO,CAAC0H,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAEjF,KAAK,CAAC;AAC9C,CAAC;;AAGD;AACA;AACA;AACA;AACA7C,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACwG,QAAQ,GAAG,YAAW;EACrD,OAAOzI,IAAI,CAACc,OAAO,CAAC0H,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAEpE,SAAS,CAAC;AAClD,CAAC;;AAGD;AACA;AACA;AACA;AACA1D,KAAK,CAACC,IAAI,CAACoB,WAAW,CAACE,SAAS,CAACyG,MAAM,GAAG,YAAW;EACnD,OAAO1I,IAAI,CAACc,OAAO,CAACqG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI;AAC/C,CAAC;AAGDjH,IAAI,CAACyI,MAAM,CAACC,MAAM,CAACC,OAAO,EAAEnI,KAAK,CAACC,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}