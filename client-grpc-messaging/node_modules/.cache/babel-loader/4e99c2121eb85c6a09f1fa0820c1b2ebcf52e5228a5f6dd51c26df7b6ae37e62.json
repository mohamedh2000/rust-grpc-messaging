{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n  const originalResolvePath = root.resolvePath;\n  root.resolvePath = (origin, target) => {\n    if (path.isAbsolute(target)) {\n      return target;\n    }\n    for (const directory of includePaths) {\n      const fullPath = path.join(directory, target);\n      try {\n        fs.accessSync(fullPath, fs.constants.R_OK);\n        return fullPath;\n      } catch (err) {\n        continue;\n      }\n    }\n    process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n    return originalResolvePath(origin, target);\n  };\n}\nasync function loadProtosWithOptions(filename, options) {\n  const root = new Protobuf.Root();\n  options = options || {};\n  if (!!options.includeDirs) {\n    if (!Array.isArray(options.includeDirs)) {\n      return Promise.reject(new Error('The includeDirs option must be an array'));\n    }\n    addIncludePathResolver(root, options.includeDirs);\n  }\n  const loadedRoot = await root.load(filename, options);\n  loadedRoot.resolveAll();\n  return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n  const root = new Protobuf.Root();\n  options = options || {};\n  if (!!options.includeDirs) {\n    if (!Array.isArray(options.includeDirs)) {\n      throw new Error('The includeDirs option must be an array');\n    }\n    addIncludePathResolver(root, options.includeDirs);\n  }\n  const loadedRoot = root.loadSync(filename, options);\n  loadedRoot.resolveAll();\n  return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n  // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n  // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n  // Using constant strings for compatibility with tools like Webpack\n  const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n  const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n  const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n  const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n  Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;","map":{"version":3,"names":["fs","require","path","Protobuf","addIncludePathResolver","root","includePaths","originalResolvePath","resolvePath","origin","target","isAbsolute","directory","fullPath","join","accessSync","constants","R_OK","err","process","emitWarning","loadProtosWithOptions","filename","options","Root","includeDirs","Array","isArray","Promise","reject","Error","loadedRoot","load","resolveAll","exports","loadProtosWithOptionsSync","loadSync","addCommonProtos","apiDescriptor","descriptorDescriptor","sourceContextDescriptor","typeDescriptor","common","nested","google","protobuf"],"sources":["../../src/util.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}